generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DT_USER {
  nik              String           @id @db.VarChar(9)
  nama             String           @db.VarChar(40)
  password         String           @db.VarChar(100)
  noTelp           String           @db.VarChar(13)
  email            String           @db.VarChar(30)
  roleId           String           @db.VarChar(20)
  role             DT_ROLE          @relation(fields: [roleId], references: [id], onDelete: Restrict)
  statusActive     Boolean
  accessRegionId    String?          @unique @db.VarChar(100)
  accessStoreId    String?          @unique @db.VarChar(100)

  // Relasi
  accessRegionIds    DT_ACCESS_REGION[]
  accessStoreIds     DT_ACCESS_STORE[]
  AccessRegion      DT_ACCESS_REGION? @relation("UserRegionStore", fields: [accessRegionId], references: [id])
  accessStore      DT_ACCESS_STORE?  @relation("UserAccessStore", fields: [accessStoreId], references: [id])
  forgotPasswords  LOG_FORGOT_PASSWORD[]
}

model DT_ACCESS_REGION {
  id              String      @id @default(uuid())
  userNik         String      @db.VarChar(9)
  regionId        String      @db.VarChar(30)
  user            DT_USER     @relation(fields: [userNik], references: [nik], onDelete: Cascade)
  region          DT_REGION   @relation(fields: [regionId], references: [id], onDelete: Cascade)

  // Relasi
  userRegionStore DT_USER?    @relation("UserRegionStore")

  @@index([userNik])
  @@index([regionId])
  @@unique([userNik, regionId])
}

model DT_ACCESS_STORE {
  id               String     @id @default(uuid())
  userNik          String     @db.VarChar(9)
  storeId          String     @db.VarChar(10)

  user             DT_USER    @relation(fields: [userNik], references: [nik], onDelete: Cascade)
  store            DT_STORE   @relation(fields: [storeId], references: [id], onDelete: Cascade)

  // Relasi
  userAccessStore  DT_USER?   @relation("UserAccessStore")

  @@unique([userNik, storeId])
  @@index([userNik])
  @@index([storeId])
}

model DT_REGION {
  id    String           @id @db.VarChar(20)
  region  String           @db.VarChar(30)
  stores  DT_STORE[]
  access  DT_ACCESS_REGION[]
}

model DT_STORE {
  id           String            @id @db.VarChar(10)
  brand        String            @db.VarChar(30)
  address      String?           @db.VarChar(100)
  statusActive Boolean
  regionId     String            @db.VarChar(30)

  region       DT_REGION         @relation(fields: [regionId], references: [id], onDelete: Restrict)
  users        DT_ACCESS_STORE[]

  @@index([statusActive])
  @@index([regionId])
}

model DT_ROLE {
  id     String     @id @db.VarChar(20)
  nama   String     @db.VarChar(20)
  users  DT_USER[]
}

model LOG_FORGOT_PASSWORD {
  otp        String    @id @db.VarChar(6)
  nik        String    @db.VarChar(9)
  used       Boolean   @default(false)
  createdAt  DateTime  @default(now())
  expiresAt  DateTime

  user       DT_USER   @relation(fields: [nik], references: [nik], onDelete: Cascade)
}
